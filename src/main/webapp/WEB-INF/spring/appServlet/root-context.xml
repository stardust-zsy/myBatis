<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:b="http://www.springframework.org/schema/beans" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
				http://www.springframework.org/schema/security  
		http://www.springframework.org/schema/security/spring-security.xsd">
	<!-- 数据源 : DriverManagerDataSource -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/myAdmin?useSSL=false" />
		<property name="username" value="root" />
		<property name="password" value="123159" />
	</bean>

	<!-- 创建工厂 bean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:config/mybatis-config.xml" />
	</bean>

	<!-- 查找类路径下的映射器并自动将它们创建成MapperFctoryBean -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="test"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 开启Spring的事务处理，为事务管理器指定的DataSource必须和用来创建SqlSessionFactoryBean 的是同一个数据源 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>


	<security:http auto-config="false">
		<security:intercept-url pattern="/submit**"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/**/*.js"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/submit**"
			access="ROLE_USER,ROLE_ADMIN" />

		<!-- 设置登录过滤器 -->
		<security:custom-filter before="FORM_LOGIN_FILTER"
			ref="authenticationProcessingFilter" />

		<security:form-login login-page="/"
			default-target-url="/login_success.do" authentication-failure-url="/login_fail"
			username-parameter="username" password-parameter="password" />
		<!-- <security:logout logout-success-url="/login?logout" /> -->

	</security:http>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>

			<!-- <security:user-service> <security:user name="admin123" password="admin123" 
				authorities="ROLE_USER" /> </security:user-service> -->

			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="SELECT users.username AS username, users.password,  enabled AS enabled FROM users WHERE users.username = ?"

				authorities-by-username-query="SELECT authorities.username AS username,  authorities.authority AS authorities From authorities WHERE authorities.username = ?" />
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- 自定义消息 -->
	<b:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<b:property name="basename"
			value="classpath:org/springframework/security/messages" />
	</b:bean>

	<!-- 定制登录过滤器 -->
	<beans:bean id="loginSuccessHandler" class="test.security.LoginSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/submit">
		</beans:property>
		<!-- 登录成功后转发到该页面 -->
	</beans:bean>
	<beans:bean id="authenticationProcessingFilter"
		class="test.security.LoginUsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationSuccessHandler"
			ref="loginSuccessHandler"></beans:property>
		<beans:property name="authenticationFailureHandler"
			ref="authenticationFailureHandler"></beans:property>
		<beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
	</beans:bean>
	<beans:bean id="authenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">

		<beans:property name="defaultFailureUrl" value="/login?error=true">
			<!-- 登录失败后转发到该页面 -->
		</beans:property>
	</beans:bean>
	<!-- 指定引用 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>  